name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            python-version: '3.11'
            build-command: 'python -m cx_Freeze bdist_msi'
            artifact-pattern: 'dist/*.msi'
          - os: macos-latest
            python-version: '3.11'
            build-command: 'python -m cx_Freeze bdist_dmg'
            artifact-pattern: 'build/*.dmg'
          - os: ubuntu-latest
            python-version: '3.11'
            build-command: 'python -m cx_Freeze bdist_appimage'
            artifact-pattern: 'dist/*.AppImage'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install cx_Freeze pillow

    - name: Install build dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install mingw -y

    - name: Install build dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev

    - name: Generate icon
      run: |
        cd assets
        python generate_icon.py
        cd ..

    - name: Build distribution
      run: ${{ matrix.build-command }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SubSpell-${{ matrix.os }}
        path: ${{ matrix.artifact-pattern }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: SubSpell-*

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 